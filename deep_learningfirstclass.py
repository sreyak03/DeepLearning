# -*- coding: utf-8 -*-
"""deep learningfirstclass.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J7BrRG66-_2YUw2kJYrRXCMR9QKAihZr
"""

class myclass:
  x=5
print(myclass.x)

#CALCULATOR
class calcu:
  def __init__(self,a,b):
    self.a=a
    self.b=b

  def add(self):
    self.a=int(input("Enter first number:"))
    self.b=int(input("Enter second number:"))
    print(self.a+self.b)

  def sub(self):
    self.a=int(input("Enter first number:"))
    self.b=int(input("Enter second number:"))
    if self.a>self.b:
      print(self.a-self.b)
    else:
      print(self.b-self.a)

  def mul(self):
    self.a=int(input("Enter first number:"))
    self.b=int(input("Enter second number:"))
    print(self.a*self.b)

  def div(self):
    self.a=int(input("Enter first number:"))
    self.b=int(input("Enter second number:"))
    print(self.a/self.b)
obj =calcu(6,8)
print("Menu")
print("1.add")
print("2.sub")
print("3.mul")
print("4.div")
print("5.Exit")

while True:
  n=int(input("enter your choice:"))
  if n==1:
    obj.add()

  elif n==2:
    obj.sub()

  elif n==3:
    obj.mul()

  elif n==4:
    obj.div()


  elif n==5:
    print("Exit")
    break
  else:
    print("Enter a valid choice")

class person:
  def __init__ (self,name,age):
    self.name = name
    self.age = age

d= person("John",33)
print(d.name)
print(d.age)

class person:
  def __init__ (self,name,age):
    self.name = name
    self.age = age

  def nameage(self):
    print(self.name,self.age)
class parent(person):
  pass

x=parent("John",33)
x.nameage()

#single inheritance
class circle:
  def __init__(self):
    self.r=int(input("Enter radius:"))
  def area(self):
    print(3.14*self.r*self.r)
class rectangle(circle):
  def __init__(self):
    self.l=int(input("Enter length:"))
    self.b=int(input("Enter breadth:"))
  def area(self):
    print(self.l*self.b)

d=circle()
d.area()
c=rectangle()
c.area()

#multiple inheritance
class fruit:
  def name(self):
    print("Apple")
class color:
  def name(self):
    print("red")
class fruitcolor(fruit,color):
  pass
obj=fruitcolor()
obj.name()

#method overriding
class A:
    def display(self):
        print("I am in Super Class")


class B(A):
    def display(self):
        print("I am in Sub Class")
        super().display()

D1=B()
D1.display()